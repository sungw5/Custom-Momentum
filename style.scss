@import url("https://fonts.googleapis.com/css2?family=Bowlby+One+SC&family=Bungee&family=Encode+Sans:wght@400;500&family=Indie+Flower&family=Krona+One&family=Press+Start+2P&family=Roboto:wght@100&display=swap");
body {
  background-color: rgb(10, 8, 8);
  color: rgb(199, 220, 224);
  font-family: "Krona One", sans-serif;
}
*:focus {
  outline: none;
}

.main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  left: 0;
  right: 0;
  top: 25%;
  margin: auto 0;
}

input {
  background-color: transparent;
  border-radius: 18px;
  font-weight: 400;
  font-size: 15px;
  border: whitesmoke solid;
  padding: 5px 15px;
  color: white;
}

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: pink;
  font-family: "Encode Sans", sans-serif;
}

/* Clock  */
.js-clock {
  font-size: 40px;
  font-weight: 700;
  margin: 18px 0px;
  text-shadow: 6px 6px 0px rgba(0, 0, 0, 0.2);
}
.js-clock h1 {
  margin: 0;
  display: inline;
}

.form,
.greetings {
  display: none;
  font-family: "Indie Flower", cursive;
  margin: 8px 0px;
  font-size: 25px;
}

.showing {
  display: block;
}

/* Background photo */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.backgroundImg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  animation: fadeIn 3s ease-out;
}

/* Weather */
.js-weather {
  position: absolute;
  font-family: "Indie Flower", cursive;
  font-size: 18px;
  right: 20px;
  top: 20px;
  justify-content: flex-end;
}

.js-toDoList {
  list-style: none;
  text-align: center;
  display: flex;
  flex-direction: column;
  padding: 0px;
}

button {
  border-radius: 50%;
  cursor: pointer;
  background-color: pink;
  opacity: 0.8;
  margin: 2px 10px;
  padding: 1px 7px 2px;
}

.links {
  a {
    color: white;
    margin: 4px;
  }
  a:visited {
    color: white;
  }
}

// light effects
.circle-container {
  $particleNum: 300;
  $particleColor: hsl(180, 100%, 80%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
      hsl(180, 100%, 80%),
      hsl(180, 100%, 80%) 10%,
      hsla(180, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  $particleBaseSize: 8;

  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: random($particleBaseSize);
      width: $circleSize + px;
      height: $circleSize + px;

      $startPositionY: random(10) + 100;
      $framesName: "move-frames-" + $i;
      $moveDuration: 28000 + random(9000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(37000) + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(
            #{random(100) + vw},
            #{$startPositionY + vh},
            0
          );
        }

        to {
          transform: translate3d(
            #{random(100) + vw},
            #{- $startPositionY - random(30) + vh},
            0
          );
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
}
